Файлы проекта
=============

DoDoc_Notification.py
    - скрипт создания Извещения
DoDoc_TT.py
    - скрипт создания ТТ
odg2png.py
    - конвертер формата odg в png
odt2pdf.py
    - конвертер формата odt в pdf
Template.py
    - класс обработки xml-шаблонов
OpenOffice_document.py
    - вспомогательные классы для работы с OpenOffice
import_uno.py
    - импортер UNO
paradox.py
    - класс для работы с БД Paradox


Template.py
===========

функция setAttributes
    - устанавливает аттрибуты для узла XML DOM

функция iterNode
    - проходит по всем узлам XML DOM и вызывает методы callback-объекта

класс Template
    - обработчик XML шаблона, метод render возвращает результат подстановки
      параметров в шаблон

класс Template_handler
    - основной SAX-обработчик. Подставляет параметры в шаблон и использует
      хэндлеры для обработки "сложных" тэгов, таких, как таблицы и рисунки.

класс Tag_handler
    - абстрактный класс, определяющий интерфейс хэндлеров

класс Row_handler
    - Хэндлер для строк таблиц (тэг table:row)

класс Image_handler
    - Хэндлер для изображений (тэг draw:image)

класс Parameters_finder
    - ищет подстановочные слова в узле XML DOM

класс Replacer
    - Подставляет параметры в узел XML DOM

Также в файле расположено несколько тестовых функций, проверяющих некоторый функционал.


DoDoc_TT.py
===========

класс Parameters_parser
    - разбирает входной xml файл, содержащий описание параметров.

функция parseParameters
    - возвращает результат работы класса Parameters_parser

функция basefilename
    - возвращает имя файла без пути и расширения

функция renderTemplate
    - создает новый odt файл на основе шаблона, картинок и словаря подстановочных параметров

функция replaceManifest
    - вставляет в Manifest.xml список картинок

функция cleanPictures
    - удаляет из odt архива не использованные картинки

функция main
    - вызывает описанные выше функции в соответствии с переданными в командной строке параметрами
